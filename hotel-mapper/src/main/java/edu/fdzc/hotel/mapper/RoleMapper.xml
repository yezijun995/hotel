<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.fdzc.hotel.mapper.RoleMapper">

    <resultMap type="edu.fdzc.hotel.po.Role" id="RoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleType" column="role_type" jdbcType="VARCHAR"/>
        <result property="hotelId" column="hotel_id" jdbcType="INTEGER"/>
        <result property="createor" column="createor" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updater" column="updater" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="state" column="state" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="deleted" column="deleted" jdbcType="TINYINT"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select
          id, role_name, role_type, hotel_id, createor, create_time, updater, update_time, state, remark, deleted
        from hotel_dev.role
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleMap">
        select
          id, role_name, role_type, hotel_id, createor, create_time, updater, update_time, state, remark, deleted
        from hotel_dev.role
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoleMap">
        select
        id, role_name, role_type, hotel_id, createor, create_time, updater, update_time, state, remark, deleted
        from hotel_dev.role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="roleType != null and roleType != ''">
                and role_type = #{roleType}
            </if>
            <if test="hotelId != null">
                and hotel_id = #{hotelId}
            </if>
            <if test="createor != null">
                and createor = #{createor}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updater != null">
                and updater = #{updater}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="state != null and state != ''">
                and state = #{state}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into hotel_dev.role(role_name, role_type, hotel_id, createor, create_time, updater, update_time, state, remark, deleted)
        values (#{roleName}, #{roleType}, #{hotelId}, #{createor}, #{createTime}, #{updater}, #{updateTime}, #{state}, #{remark}, #{deleted})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into hotel_dev.role(role_name, role_type, hotel_id, createor, create_time, updater, update_time, state,
        remark, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.roleType}, #{entity.hotelId}, #{entity.createor}, #{entity.createTime},
            #{entity.updater}, #{entity.updateTime}, #{entity.state}, #{entity.remark}, #{entity.deleted})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into hotel_dev.role(role_name, role_type, hotel_id, createor, create_time, updater, update_time, state,
        remark, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.roleType}, #{entity.hotelId}, #{entity.createor}, #{entity.createTime},
            #{entity.updater}, #{entity.updateTime}, #{entity.state}, #{entity.remark}, #{entity.deleted})
        </foreach>
        on duplicate key update
        role_name = values(role_name) , role_type = values(role_type) , hotel_id = values(hotel_id) , createor =
        values(createor) , create_time = values(create_time) , updater = values(updater) , update_time =
        values(update_time) , state = values(state) , remark = values(remark) , deleted = values(deleted)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update hotel_dev.role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="roleType != null and roleType != ''">
                role_type = #{roleType},
            </if>
            <if test="hotelId != null">
                hotel_id = #{hotelId},
            </if>
            <if test="createor != null">
                createor = #{createor},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updater != null">
                updater = #{updater},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="state != null and state != ''">
                state = #{state},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from hotel_dev.role where id = #{id}
    </delete>

</mapper>

